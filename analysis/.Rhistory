#res.part3[res.part3$comparison != "lingVCult",
#          c("mantelr","lower","upper")] =
#  - res.part3[res.part3$comparison != "lingVCult",
#              c("mantelr","lower","upper")]
domainOrder = res.part3[res.part3$comparison=="lingVCult",]
domainOrder = domainOrder[order(domainOrder$mantelr),]$domain
res.part3$domain = factor(res.part3$domain,
levels = domainOrder)
res.part3.plot =
ggplot(res.part3, aes(y=mantelr,color=comparison,x=domain)) +
geom_point(position = position_dodge(width=0.8)) +
geom_errorbar(aes(ymin=lower, ymax=upper),
position = position_dodge(width=0.8)) +
geom_vline(xintercept=seq(1.5, length(unique(res.part3$domain))-0.5, 1),
lwd=1, colour="white") +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
legend.position = "top")+
scale_color_manual(
breaks=c("lingVCult","lingVGeo","lingVHist"),
labels=c("Cultural similarity","Geographic proximity","Historical proximity"),
values=brewer.pal(3,"Set2")[c(2,1,3)],
name="Correlation between linguistic alignment and ...") +
ylab("Mantel r") +
xlab("") +
coord_flip()
pdf("../results/stats/wikipedia-main/LingAlignmentByDomains_vs_HistoricalAndGeographicalProximity.pdf",
height=6,width=10)
res.part3.plot
dev.off()
hist(geoDist.m)
dim(geoDist.m)
in.analysis
in.analysis = intersect(rownames(ling.m),rownames(cult.m))
in.analysis = intersect(in.analysis, rownames(hist.m))
in.analysis
plot(res.part3[res.part3$domain=="Kinship" & res.part3$comparison=="lingVGeo",],
res.part3[res.part3$domain=="Kinship" & res.part3$comparison=="lingVCult",])
plot(res.part3[res.part3$domain=="Kinship" & res.part3$comparison=="lingVGeo",]$mantelr,
res.part3[res.part3$domain=="Kinship" & res.part3$comparison=="lingVCult",]$mantelr)
res.part3$comparison
plot(res.part3[res.part3$comparison=="lingVGeo",]$mantelr,
res.part3[res.part3$comparison=="lingVCult",]$mantelr)
plot(res.part3[res.part3$comparison=="lingVHist",]$mantelr,
res.part3[res.part3$comparison=="lingVCult",]$mantelr)
cor.test(res.part3[res.part3$comparison=="lingVGeo",]$mantelr,
res.part3[res.part3$comparison=="lingVCult",]$mantelr)
plot(geo.r,cult.r)
geo.r = res.part3[res.part3$comparison=="lingVGeo",]$mantelr
cult.r = res.part3[res.part3$comparison=="lingVCult",]$mantelr
hist.r = res.part3[res.part3$comparison=="lingVHist",]$mantelr
plot(geo.r,cult.r)
cor.test(geo.r,cult.r)
plot(hist.r,cult.r)
cor.test(hist.r,cult.r)
res.part3.plot =
ggplot(res.part3, aes(y=mantelr,
color=comparison,
shape=comparison,
x=domain)) +
geom_point(position = position_dodge(width=0.8)) +
geom_errorbar(aes(ymin=lower, ymax=upper),
position = position_dodge(width=0.8)) +
geom_vline(xintercept=seq(1.5, length(unique(res.part3$domain))-0.5, 1),
lwd=1, colour="white") +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
legend.position = "top")+
scale_color_manual(
breaks=c("lingVCult","lingVGeo","lingVHist"),
labels=c("Cultural similarity","Geographic proximity","Historical proximity"),
values=brewer.pal(3,"Set2")[c(2,1,3)],
name="Correlation between linguistic alignment and ...") +
ylab("Mantel r") +
xlab("") +
coord_flip()
res.part3.plot
ggplot(res.part3, aes(y=mantelr,
color=comparison,
shape=comparison,
x=domain)) +
geom_point(position = position_dodge(width=0.8)) +
geom_errorbar(aes(ymin=lower, ymax=upper),
position = position_dodge(width=0.8)) +
geom_vline(xintercept=seq(1.5, length(unique(res.part3$domain))-0.5, 1),
lwd=1, colour="white") +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
legend.position = "top")+
scale_color_manual(
breaks=c("lingVCult","lingVGeo","lingVHist"),
labels=c("Cultural similarity","Geographic proximity","Historical proximity"),
values=brewer.pal(3,"Set2")[c(2,1,3)],
name="Correlation between linguistic alignment and ...") +
ylab("Mantel r") +
xlab("") +
coord_flip()
res.part3.plot =
ggplot(res.part3, aes(y=mantelr,
color=comparison,
shape=comparison,
x=domain)) +
geom_point(position = position_dodge(width=0.8)) +
geom_errorbar(aes(ymin=lower, ymax=upper),
position = position_dodge(width=0.8)) +
geom_vline(xintercept=seq(1.5, length(unique(res.part3$domain))-0.5, 1),
lwd=1, colour="white") +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
legend.position = "top")+
scale_color_manual(
breaks=c("lingVCult","lingVGeo","lingVHist"),
labels=c("Cultural similarity","Geographic proximity","Historical proximity"),
values=brewer.pal(3,"Set2")[c(2,1,3)],
name="Correlation between linguistic alignment and ...") +
ylab("Mantel r") +
xlab("") +
coord_flip()
pdf("../results/stats/wikipedia-main/LingAlignmentByDomains_vs_HistoricalAndGeographicalProximity.pdf",
height=6,width=10)
res.part3.plot
dev.off()
res.part3.plot =
ggplot(res.part3, aes(y=mantelr,
color=comparison,
shape=comparison,
x=domain)) +
geom_point(position = position_dodge(width=0.8)) +
geom_errorbar(aes(ymin=lower, ymax=upper),
position = position_dodge(width=0.8)) +
geom_vline(xintercept=seq(1.5, length(unique(res.part3$domain))-0.5, 1),
lwd=1, colour="white") +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
legend.position = "top")+
scale_color_manual(
breaks=c("lingVCult","lingVGeo","lingVHist"),
labels=c("Cultural similarity","Geographic proximity","Historical proximity"),
values=brewer.pal(3,"Set2")[c(2,1,3)],
name="Correlation between linguistic alignment and ...") +
scale_shape_manual(
breaks=c("lingVCult","lingVGeo","lingVHist"),
labels=c("Cultural similarity","Geographic proximity","Historical proximity"),
values=brewer.pal(3,"Set2")[c(2,1,3)],
name="Correlation between linguistic alignment and ...")
ylab("Mantel r") +
xlab("") +
coord_flip()
pdf("../results/stats/wikipedia-main/LingAlignmentByDomains_vs_HistoricalAndGeographicalProximity.pdf",
height=6,width=10)
res.part3.plot
dev.off()
res.part3.plot =
ggplot(res.part3, aes(y=mantelr,
color=comparison,
shape=comparison,
x=domain)) +
geom_point(position = position_dodge(width=0.8)) +
geom_errorbar(aes(ymin=lower, ymax=upper),
position = position_dodge(width=0.8)) +
geom_vline(xintercept=seq(1.5, length(unique(res.part3$domain))-0.5, 1),
lwd=1, colour="white") +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
legend.position = "top")+
scale_color_manual(
breaks=c("lingVCult","lingVGeo","lingVHist"),
labels=c("Cultural similarity","Geographic proximity","Historical proximity"),
values=brewer.pal(3,"Set2")[c(2,1,3)],
name="Correlation between linguistic alignment and ...") +
scale_shape_manual(
breaks=c("lingVCult","lingVGeo","lingVHist"),
labels=c("Cultural similarity","Geographic proximity","Historical proximity"),
values=brewer.pal(3,"Set2")[c(2,1,3)],
name="Correlation between linguistic alignment and ...")+
ylab("Mantel r") +
xlab("") +
coord_flip()
pdf("../results/stats/wikipedia-main/LingAlignmentByDomains_vs_HistoricalAndGeographicalProximity.pdf",
height=6,width=10)
res.part3.plot
dev.off()
# Apparent trade-off between Geo and Cult:
geo.r = res.part3[res.part3$comparison=="lingVGeo",]$mantelr
cult.r = res.part3[res.part3$comparison=="lingVCult",]$mantelr
hist.r = res.part3[res.part3$comparison=="lingVHist",]$mantelr
plot(geo.r,cult.r)
cor.test(geo.r,cult.r)
plot(hist.r,cult.r)
cor.test(hist.r,cult.r)
res.part3.plot =
ggplot(res.part3, aes(y=mantelr,
color=comparison,
shape=comparison,
x=domain)) +
geom_point(position = position_dodge(width=0.8)) +
geom_errorbar(aes(ymin=lower, ymax=upper),
position = position_dodge(width=0.8)) +
geom_vline(xintercept=seq(1.5, length(unique(res.part3$domain))-0.5, 1),
lwd=1, colour="white") +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
legend.position = "top")+
scale_color_manual(
breaks=c("lingVCult","lingVGeo","lingVHist"),
labels=c("Cultural similarity","Geographic proximity","Historical proximity"),
values=brewer.pal(3,"Set2")[c(2,1,3)],
name="Correlation between linguistic alignment and ...") +
scale_shape_manual(
breaks=c("lingVCult","lingVGeo","lingVHist"),
labels=c("Cultural similarity","Geographic proximity","Historical proximity"),
values=1:3,
name="Correlation between linguistic alignment and ...")+
ylab("Mantel r") +
xlab("") +
coord_flip()
pdf("../results/stats/wikipedia-main/LingAlignmentByDomains_vs_HistoricalAndGeographicalProximity.pdf",
height=6,width=10)
res.part3.plot
dev.off()
# Apparent trade-off between Geo and Cult:
geo.r = res.part3[res.part3$comparison=="lingVGeo",]$mantelr
cult.r = res.part3[res.part3$comparison=="lingVCult",]$mantelr
hist.r = res.part3[res.part3$comparison=="lingVHist",]$mantelr
plot(geo.r,cult.r)
cor.test(geo.r,cult.r)
plot(hist.r,cult.r)
cor.test(hist.r,cult.r)
plot(1:20,pch=1:20)
res.part3.plot =
ggplot(res.part3, aes(y=mantelr,
color=comparison,
shape=comparison,
x=domain)) +
geom_point(position = position_dodge(width=0.8)) +
geom_errorbar(aes(ymin=lower, ymax=upper),
position = position_dodge(width=0.8)) +
geom_vline(xintercept=seq(1.5, length(unique(res.part3$domain))-0.5, 1),
lwd=1, colour="white") +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
legend.position = "top")+
scale_color_manual(
breaks=c("lingVCult","lingVGeo","lingVHist"),
labels=c("Cultural similarity","Geographic proximity","Historical proximity"),
values=brewer.pal(3,"Set2")[c(2,1,3)],
name="Correlation between linguistic alignment and ...") +
scale_shape_manual(
breaks=c("lingVCult","lingVGeo","lingVHist"),
labels=c("Cultural similarity","Geographic proximity","Historical proximity"),
values=c(15,17,16),
name="Correlation between linguistic alignment and ...")+
ylab("Mantel r") +
xlab("") +
coord_flip()
pdf("../results/stats/wikipedia-main/LingAlignmentByDomains_vs_HistoricalAndGeographicalProximity.pdf",
height=6,width=10)
res.part3.plot
dev.off()
res.part3$pval3
hist(res.part3$pval3)
hist(res.part3$pval3,breaks=20)
(res.part3$pval3<0.05) == (sign(res.part3$lower)==sign(res.part3$upper))
consistent = (res.part3$pval3<0.05) == (sign(res.part3$lower)==sign(res.part3$upper))
res.part3[!consistent,]
res.part3[res.part3$pval3<0.05,]
?ecodist::mantel
res.part3.plot =
ggplot(res.part3, aes(y=mantelr,
color=comparison,
shape=comparison,
x=domain)) +
geom_point(position = position_dodge(width=0.8)) +
geom_errorbar(aes(ymin=lower, ymax=upper),
position = position_dodge(width=0.8)) +
geom_vline(xintercept=seq(1.5, length(unique(res.part3$domain))-0.5, 1),
lwd=1, colour="white") +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
legend.position = "top")+
scale_color_manual(
breaks=c("lingVGeo","lingVHist","lingVCult"),
labels=c("Cultural similarity","Geographic proximity","Historical proximity"),
values=brewer.pal(3,"Set2")[c(1,3,2)],
name="Correlation between linguistic alignment and ...") +
scale_shape_manual(
breaks=c("lingVGeo","lingVHist","lingVCult"),
labels=c("Cultural similarity","Geographic proximity","Historical proximity"),
values=c(17,16,15),
name="Correlation between linguistic alignment and ...")+
ylab("Mantel r") +
xlab("") +
coord_flip()
pdf("../results/stats/wikipedia-main/LingAlignmentByDomains_vs_HistoricalAndGeographicalProximity.pdf",
height=6,width=10)
res.part3.plot
dev.off()
# Apparent trade-off between Geo and Cult:
geo.r = res.part3[res.part3$comparison=="lingVGeo",]$mantelr
cult.r = res.part3[res.part3$comparison=="lingVCult",]$mantelr
hist.r = res.part3[res.part3$comparison=="lingVHist",]$mantelr
plot(geo.r,cult.r)
cor.test(geo.r,cult.r)
plot(hist.r,cult.r)
cor.test(hist.r,cult.r)
res.part3.plot =
ggplot(res.part3, aes(y=mantelr,
color=comparison,
shape=comparison,
x=domain)) +
geom_point(position = position_dodge(width=0.8)) +
geom_errorbar(aes(ymin=lower, ymax=upper),
position = position_dodge(width=0.8)) +
geom_vline(xintercept=seq(1.5, length(unique(res.part3$domain))-0.5, 1),
lwd=1, colour="white") +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
legend.position = "top")+
scale_color_manual(
breaks=c("lingVGeo","lingVHist","lingVCult"),
labels=c("Geographic proximity","Historical proximity","Cultural similarity"),
values=brewer.pal(3,"Set2")[c(1,3,2)],
name="Correlation between linguistic alignment and ...") +
scale_shape_manual(
breaks=c("lingVGeo","lingVHist","lingVCult"),
labels=c("Geographic proximity","Historical proximity","Cultural similarity"),
values=c(17,16,15),
name="Correlation between linguistic alignment and ...")+
ylab("Mantel r") +
xlab("") +
coord_flip()
pdf("../results/stats/wikipedia-main/LingAlignmentByDomains_vs_HistoricalAndGeographicalProximity.pdf",
height=6,width=10)
res.part3.plot
dev.off()
# Apparent trade-off between Geo and Cult:
geo.r = res.part3[res.part3$comparison=="lingVGeo",]$mantelr
cult.r = res.part3[res.part3$comparison=="lingVCult",]$mantelr
hist.r = res.part3[res.part3$comparison=="lingVHist",]$mantelr
plot(geo.r,cult.r)
cor.test(geo.r,cult.r)
plot(hist.r,cult.r)
cor.test(hist.r,cult.r)
res.part3.plot =
ggplot(res.part3, aes(y=mantelr,
color=comparison,
shape=comparison,
x=domain)) +
geom_point(position = position_dodge(width=0.8)) +
geom_errorbar(aes(ymin=lower, ymax=upper),
position = position_dodge(width=0.8)) +
geom_vline(xintercept=seq(1.5, length(unique(res.part3$domain))-0.5, 1),
lwd=1, colour="white") +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
legend.position = "top")+
scale_color_manual(
breaks=c("lingVGeo","lingVHist","lingVCult"),
labels=c("Geographic proximity","Historical proximity","Cultural similarity"),
values=brewer.pal(3,"Set2")[c(3,2,1)],
name="Correlation between linguistic alignment and ...") +
scale_shape_manual(
breaks=c("lingVGeo","lingVHist","lingVCult"),
labels=c("Geographic proximity","Historical proximity","Cultural similarity"),
values=c(17,16,15),
name="Correlation between linguistic alignment and ...")+
ylab("Mantel r") +
xlab("") +
coord_flip()
pdf("../results/stats/wikipedia-main/LingAlignmentByDomains_vs_HistoricalAndGeographicalProximity.pdf",
height=6,width=10)
res.part3.plot
dev.off()
# Apparent trade-off between Geo and Cult:
geo.r = res.part3[res.part3$comparison=="lingVGeo",]$mantelr
cult.r = res.part3[res.part3$comparison=="lingVCult",]$mantelr
hist.r = res.part3[res.part3$comparison=="lingVHist",]$mantelr
plot(geo.r,cult.r)
cor.test(geo.r,cult.r)
plot(hist.r,cult.r)
cor.test(hist.r,cult.r)
res.part3.plot =
ggplot(res.part3, aes(y=mantelr,
color=comparison,
shape=comparison,
x=domain)) +
geom_point(position = position_dodge(width=0.8)) +
geom_errorbar(aes(ymin=lower, ymax=upper),
position = position_dodge(width=0.8)) +
geom_vline(xintercept=seq(1.5, length(unique(res.part3$domain))-0.5, 1),
lwd=1, colour="white") +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
legend.position = "top")+
scale_color_manual(
breaks=c("lingVGeo","lingVHist","lingVCult"),
labels=c("Geographic proximity","Historical proximity","Cultural similarity"),
values=brewer.pal(3,"Set2")[c(2,1,3)],
name="Correlation between linguistic alignment and ...") +
scale_shape_manual(
breaks=c("lingVGeo","lingVHist","lingVCult"),
labels=c("Geographic proximity","Historical proximity","Cultural similarity"),
values=c(17,16,15),
name="Correlation between linguistic alignment and ...")+
ylab("Mantel r") +
xlab("") +
coord_flip()
pdf("../results/stats/wikipedia-main/LingAlignmentByDomains_vs_HistoricalAndGeographicalProximity.pdf",
height=6,width=10)
res.part3.plot
dev.off()
res.part3.plot =
ggplot(res.part3, aes(y=mantelr,
color=comparison,
shape=comparison,
x=domain)) +
geom_point(position = position_dodge(width=0.8)) +
geom_errorbar(aes(ymin=lower, ymax=upper),
position = position_dodge(width=0.8)) +
geom_vline(xintercept=seq(1.5, length(unique(res.part3$domain))-0.5, 1),
lwd=1, colour="white") +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
legend.position = "top")+
scale_color_manual(
breaks=c("lingVGeo","lingVHist","lingVCult"),
labels=c("Geographic proximity","Historical proximity","Cultural similarity"),
values=brewer.pal(3,"Set2")[c(2,1,3)],
name="Correlation between linguistic alignment and ...") +
scale_shape_manual(
breaks=c("lingVGeo","lingVHist","lingVCult"),
labels=c("Geographic proximity","Historical proximity","Cultural similarity"),
values=c(15,17,16),
name="Correlation between linguistic alignment and ...")+
ylab("Mantel r") +
xlab("") +
coord_flip()
pdf("../results/stats/wikipedia-main/LingAlignmentByDomains_vs_HistoricalAndGeographicalProximity.pdf",
height=6,width=10)
res.part3.plot
dev.off()
# Apparent trade-off between Geo and Cult:
geo.r = res.part3[res.part3$comparison=="lingVGeo",]$mantelr
cult.r = res.part3[res.part3$comparison=="lingVCult",]$mantelr
hist.r = res.part3[res.part3$comparison=="lingVHist",]$mantelr
plot(geo.r,cult.r)
cor.test(geo.r,cult.r)
plot(hist.r,cult.r)
cor.test(hist.r,cult.r)
try(setwd("~/Documents/Bristol/word2vec/word2vec_DPLACE/analysis/"))
d =read.csv("CultDistancesByDPlaceMainDomain.csv",stringsAsFactors = F)
try(setwd("~/Documents/Bristol/word2vec/word2vec_DPLACE/analysis/"))
d =read.csv("CultDistancesByDPlaceMainDomain.csv",stringsAsFactors = F)
d =read.csv("../results/EA_distances_DPlaceDomains/CultDistancesByDPlaceMainDomain.csv",stringsAsFactors = F)
unique(d$domain)
k = d[d$domain=="Marriage and Kinship",]
k[k$cult.dist==max(k$cult.dist),]
k[k$cult.dist>0.9,]
k[k$cult.dist>0.8,]
l = read.csv("../data/FAIR_langauges_glotto_xdid.csv", stringsAsFactors = F)
head(l)
head(d)
l$family
l = read.csv("../data/FAIR_langauges_glotto_xdid.csv", stringsAsFactors = F)
ling =read.csv("../results/EA_distances_DPlaceDomains/CultDistancesByDPlaceMainDomain.csv",stringsAsFactors = F)
ling$family1 = l[match(ling$l1, l$iso2),]$family
ling$family2 = l[match(ling$l2, l$iso2),]$family
k = ling[ling$domain=="Marriage and Kinship",]
try(setwd("~/Documents/Bristol/word2vec/word2vec_DPLACE/analysis/"))
l = read.csv("../data/FAIR_langauges_glotto_xdid.csv", stringsAsFactors = F)
ling =read.csv("../results/EA_distances_DPlaceDomains/CultDistancesByDPlaceMainDomain.csv",stringsAsFactors = F)
ling$family1 = l[match(ling$l1, l$iso2),]$family
ling$family2 = l[match(ling$l2, l$iso2),]$family
k = ling[ling$domain=="Marriage and Kinship",]
k = k[k$family1=="Indo-European" & k$family2=="Indo-European,"]
k[k$cult.dist==max(k$cult.dist),]
l$family
ling$l1
ling$family1 = l[match(ling$l1, l$Language),]$family
ling$family2 = l[match(ling$l2, l$Language),]$family
ling$family1
try(setwd("~/Documents/Bristol/word2vec/word2vec_DPLACE/analysis/"))
l = read.csv("../data/FAIR_langauges_glotto_xdid.csv", stringsAsFactors = F)
ling =read.csv("../results/EA_distances_DPlaceDomains/CultDistancesByDPlaceMainDomain.csv",stringsAsFactors = F)
ling$family1 = l[match(ling$l1, l$Language),]$family
ling$family2 = l[match(ling$l2, l$Language),]$family
k = ling[ling$domain=="Marriage and Kinship",]
k = k[k$family1=="Indo-European" & k$family2=="Indo-European,"]
k[k$cult.dist==max(k$cult.dist),]
dim(k)
k = ling[ling$domain=="Marriage and Kinship",]
k$family1
table(k$family1)
table(k$family2)
k = ling[ling$domain=="Marriage and Kinship",]
k = k[k$family1=="Indo-European" & k$family2=="Indo-European",]
k[k$cult.dist==max(k$cult.dist),]
k[k$cult.dist>0.75,]
k[k$cult.dist>0.7,]
lingDistancesFile = "../data/FAIR/nel-wiki-k100-alignments-by-language-pair.csv"
lingDistancesFileNK = "../data/FAIR/nel-wiki-k100-alignments-by-language-pair-without-kinship.csv"
ling = read.csv(lingDistancesFile, stringsAsFactors = F)
lingNK = read.csv(lingDistancesFileNK, stringsAsFactors = F)
dim(ling)
dim(lingNK)
names(lingNK
)
dim(ling)
names(ling)
plot(ling$local_alignment,lingNK$local_alignment)
cor(ling$local_alignment,lingNK$local_alignment)
write.csv(res.part3,"../results/stats/wikipedia-main/Cor_LingAlignmentByDomains_vs_HistoricalAndGeographicalDistance.csv")
